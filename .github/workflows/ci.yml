name: CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy

    - name: check format
      run: |
        cargo fmt --all -- --check

    - name: check lint
      run: |
        cargo clippy -- -D warnings

    - name: check deny
      uses: EmbarkStudios/cargo-deny-action@v1

  audit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true

    - name: audit dependencies
      run: |
        cargo install --locked cargo-audit || true
        cargo audit

    - name: check vulnerabilities
      run: |
        cargo install --locked cargo-pants || true
        cargo pants

  deps:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true

    - name: check outdated dependencies
      run: |
        cargo install --locked cargo-outdated || true
        cargo outdated --exit-code 1

    - name: check unused dependencies
      run: |
        cargo install --locked cargo-udeps || true
        cargo udeps

  build:
    name: ${{ matrix.name || format('Rust {0} @ {1}', matrix.rust, matrix.os) }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        rust:
          - nightly
          - beta
          - stable
          - 1.60.0 # MSRV
        include:
          - rust: stable
            name: MacOS
            os: macos-latest
          - rust: nightly
            name: Windows
            os: windows-latest
    env:
      RUST_BACKTRACE: full

    steps:
    - uses: actions/checkout@v3

    - name: Install latest ${{ matrix.rust }}
      id: install-rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true

    - name: setup cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-rustc-${{ steps.install-rust.outputs.rustc_hash }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: build
      run: |
        cargo build --verbose
        cargo test --verbose --no-run

    - name: run tests
      run: cargo test --verbose

    - name: run compile error tests
      continue-on-error: ${{ matrix.rust != 'stable' }}
      run: cargo test --features compile_error
